{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wesle\\\\OneDrive - KU Leuven\\\\Desktop\\\\Iceland\\\\my-iceland-trip-website\\\\src\\\\components\\\\iceland-trip\\\\themeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { daysData } from './itineraryData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [darkMode, setDarkMode] = useState(true);\n  const [currentDay, setCurrentDay] = useState(1);\n  const [isAutoThemeEnabled, setIsAutoThemeEnabled] = useState(true);\n\n  // 將時間字串轉換為可比較的數值\n  const timeToMinutes = timeStr => {\n    if (!timeStr) return 0;\n    const [hours, minutes] = timeStr.split(':').map(Number);\n    return hours * 60 + minutes;\n  };\n\n  // 切換主題的方法\n  const toggleDarkMode = (manual = false) => {\n    if (manual) {\n      // 如果是手動切換，禁用自動主題\n      setIsAutoThemeEnabled(false);\n      setDarkMode(prevMode => !prevMode);\n    } else {\n      // 自動切換\n      setDarkMode(prevMode => !prevMode);\n    }\n  };\n\n  // 自動根據日出日落時間設定主題\n  useEffect(() => {\n    // 如果自動主題被禁用，不執行自動切換\n    if (!isAutoThemeEnabled) return;\n    const now = new Date();\n    const hours = now.getHours();\n    const minutes = now.getMinutes();\n    const currentTime = hours * 60 + minutes;\n\n    // 找到當前的行程日期（假設行程從第一天開始）\n    const day = daysData[currentDay - 1];\n    if (day) {\n      const sunrise = timeToMinutes(day.sunrise);\n      const sunset = timeToMinutes(day.sunset);\n\n      // 如果當前時間在日出到日落之間，設為亮色模式\n      setDarkMode(currentTime < sunrise || currentTime > sunset);\n    }\n  }, [currentDay, isAutoThemeEnabled]);\n\n  // 重新啟用自動主題\n  const enableAutoTheme = () => {\n    setIsAutoThemeEnabled(true);\n  };\n\n  // 根據暗/亮模式設定主題色\n  const theme = {\n    darkMode,\n    bg: darkMode ? 'bg-gradient-to-b from-blue-900 via-blue-700 to-blue-900' : 'bg-gradient-to-b from-blue-50 via-white to-blue-50',\n    text: darkMode ? 'text-white' : 'text-gray-800',\n    headerBg: darkMode ? 'bg-blue-900 bg-opacity-90' : 'bg-white bg-opacity-90',\n    cardBg: darkMode ? 'bg-white bg-opacity-10 backdrop-blur-md' : 'bg-white shadow-md',\n    cardBorder: darkMode ? 'border border-blue-300 border-opacity-30' : 'border border-gray-200',\n    highlight: darkMode ? 'text-blue-300' : 'text-blue-600',\n    secondaryText: darkMode ? 'text-blue-100' : 'text-gray-600',\n    button: darkMode ? 'bg-blue-600 hover:bg-blue-700' : 'bg-blue-500 hover:bg-blue-600',\n    iconColor: darkMode ? 'text-blue-300' : 'text-blue-500'\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      darkMode,\n      toggleDarkMode,\n      theme,\n      setCurrentDay,\n      isAutoThemeEnabled,\n      enableAutoTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"fzPKACIbnC1prp7i5iJ78w7did0=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  return useContext(ThemeContext);\n};\n_s2(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","daysData","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","darkMode","setDarkMode","currentDay","setCurrentDay","isAutoThemeEnabled","setIsAutoThemeEnabled","timeToMinutes","timeStr","hours","minutes","split","map","Number","toggleDarkMode","manual","prevMode","now","Date","getHours","getMinutes","currentTime","day","sunrise","sunset","enableAutoTheme","theme","bg","text","headerBg","cardBg","cardBorder","highlight","secondaryText","button","iconColor","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","$RefreshReg$"],"sources":["C:/Users/wesle/OneDrive - KU Leuven/Desktop/Iceland/my-iceland-trip-website/src/components/iceland-trip/themeContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { daysData } from './itineraryData';\r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  const [darkMode, setDarkMode] = useState(true);\r\n  const [currentDay, setCurrentDay] = useState(1);\r\n  const [isAutoThemeEnabled, setIsAutoThemeEnabled] = useState(true);\r\n\r\n  // 將時間字串轉換為可比較的數值\r\n  const timeToMinutes = (timeStr) => {\r\n    if (!timeStr) return 0;\r\n    const [hours, minutes] = timeStr.split(':').map(Number);\r\n    return hours * 60 + minutes;\r\n  };\r\n\r\n  // 切換主題的方法\r\n  const toggleDarkMode = (manual = false) => {\r\n    if (manual) {\r\n      // 如果是手動切換，禁用自動主題\r\n      setIsAutoThemeEnabled(false);\r\n      setDarkMode(prevMode => !prevMode);\r\n    } else {\r\n      // 自動切換\r\n      setDarkMode(prevMode => !prevMode);\r\n    }\r\n  };\r\n\r\n  // 自動根據日出日落時間設定主題\r\n  useEffect(() => {\r\n    // 如果自動主題被禁用，不執行自動切換\r\n    if (!isAutoThemeEnabled) return;\r\n\r\n    const now = new Date();\r\n    const hours = now.getHours();\r\n    const minutes = now.getMinutes();\r\n    const currentTime = hours * 60 + minutes;\r\n\r\n    // 找到當前的行程日期（假設行程從第一天開始）\r\n    const day = daysData[currentDay - 1];\r\n    if (day) {\r\n      const sunrise = timeToMinutes(day.sunrise);\r\n      const sunset = timeToMinutes(day.sunset);\r\n\r\n      // 如果當前時間在日出到日落之間，設為亮色模式\r\n      setDarkMode(currentTime < sunrise || currentTime > sunset);\r\n    }\r\n  }, [currentDay, isAutoThemeEnabled]);\r\n\r\n  // 重新啟用自動主題\r\n  const enableAutoTheme = () => {\r\n    setIsAutoThemeEnabled(true);\r\n  };\r\n\r\n  // 根據暗/亮模式設定主題色\r\n  const theme = {\r\n    darkMode,\r\n    bg: darkMode ? 'bg-gradient-to-b from-blue-900 via-blue-700 to-blue-900' : 'bg-gradient-to-b from-blue-50 via-white to-blue-50',\r\n    text: darkMode ? 'text-white' : 'text-gray-800',\r\n    headerBg: darkMode ? 'bg-blue-900 bg-opacity-90' : 'bg-white bg-opacity-90',\r\n    cardBg: darkMode ? 'bg-white bg-opacity-10 backdrop-blur-md' : 'bg-white shadow-md',\r\n    cardBorder: darkMode ? 'border border-blue-300 border-opacity-30' : 'border border-gray-200',\r\n    highlight: darkMode ? 'text-blue-300' : 'text-blue-600',\r\n    secondaryText: darkMode ? 'text-blue-100' : 'text-gray-600',\r\n    button: darkMode ? 'bg-blue-600 hover:bg-blue-700' : 'bg-blue-500 hover:bg-blue-600',\r\n    iconColor: darkMode ? 'text-blue-300' : 'text-blue-500'\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ \r\n      darkMode, \r\n      toggleDarkMode, \r\n      theme, \r\n      setCurrentDay,\r\n      isAutoThemeEnabled,\r\n      enableAutoTheme\r\n    }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTheme = () => useContext(ThemeContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}