{"ast":null,"code":"// src/utils/offlineStorage.js\n/**\r\n * 離線存儲工具，使用 localStorage 管理離線數據\r\n */\n\nconst KEYS = {\n  WEATHER: 'iceland_weather_data',\n  ROAD_ALERTS: 'iceland_road_alerts',\n  NORTHERN_LIGHTS: 'iceland_northern_lights',\n  LAST_UPDATED: 'iceland_data_last_updated'\n};\n\n/**\r\n * 保存天氣數據到本地存儲\r\n * @param {Object} data - 天氣數據\r\n * @returns {boolean} - 操作是否成功\r\n */\nexport const saveWeatherData = data => {\n  try {\n    localStorage.setItem(KEYS.WEATHER, JSON.stringify(data));\n    updateLastUpdated();\n    return true;\n  } catch (error) {\n    console.error('保存天氣數據失敗:', error);\n    return false;\n  }\n};\n\n/**\r\n * 保存道路警報到本地存儲\r\n * @param {Array} alerts - 道路警報數據\r\n * @returns {boolean} - 操作是否成功\r\n */\nexport const saveRoadAlerts = alerts => {\n  try {\n    localStorage.setItem(KEYS.ROAD_ALERTS, JSON.stringify(alerts));\n    updateLastUpdated();\n    return true;\n  } catch (error) {\n    console.error('保存道路警報失敗:', error);\n    return false;\n  }\n};\n\n/**\r\n * 保存北極光預報到本地存儲\r\n * @param {Object} data - 北極光預報數據\r\n * @returns {boolean} - 操作是否成功\r\n */\nexport const saveNorthernLightsData = data => {\n  try {\n    localStorage.setItem(KEYS.NORTHERN_LIGHTS, JSON.stringify(data));\n    updateLastUpdated();\n    return true;\n  } catch (error) {\n    console.error('保存北極光預報失敗:', error);\n    return false;\n  }\n};\n\n/**\r\n * 獲取本地存儲的天氣數據\r\n * @returns {Object|null} - 天氣數據或 null\r\n */\nexport const getWeatherData = () => {\n  try {\n    const data = localStorage.getItem(KEYS.WEATHER);\n    return data ? JSON.parse(data) : null;\n  } catch (error) {\n    console.error('獲取天氣數據失敗:', error);\n    return null;\n  }\n};\n\n/**\r\n * 獲取本地存儲的道路警報\r\n * @returns {Array|null} - 道路警報數據或 null\r\n */\nexport const getRoadAlerts = () => {\n  try {\n    const data = localStorage.getItem(KEYS.ROAD_ALERTS);\n    return data ? JSON.parse(data) : null;\n  } catch (error) {\n    console.error('獲取道路警報失敗:', error);\n    return null;\n  }\n};\n\n/**\r\n * 獲取本地存儲的北極光預報\r\n * @returns {Object|null} - 北極光預報數據或 null\r\n */\nexport const getNorthernLightsData = () => {\n  try {\n    const data = localStorage.getItem(KEYS.NORTHERN_LIGHTS);\n    return data ? JSON.parse(data) : null;\n  } catch (error) {\n    console.error('獲取北極光預報失敗:', error);\n    return null;\n  }\n};\n\n/**\r\n * 更新數據最後更新時間\r\n */\nconst updateLastUpdated = () => {\n  try {\n    localStorage.setItem(KEYS.LAST_UPDATED, new Date().toISOString());\n  } catch (error) {\n    console.error('更新時間戳失敗:', error);\n  }\n};\n\n/**\r\n * 獲取數據最後更新時間\r\n * @returns {Date|null} - 最後更新時間或 null\r\n */\nexport const getLastUpdated = () => {\n  try {\n    const timestamp = localStorage.getItem(KEYS.LAST_UPDATED);\n    return timestamp ? new Date(timestamp) : null;\n  } catch (error) {\n    console.error('獲取時間戳失敗:', error);\n    return null;\n  }\n};\n\n/**\r\n * 檢查數據是否需要更新 (超過指定時間)\r\n * @param {number} hours - 數據有效時間（小時）\r\n * @returns {boolean} - 是否需要更新\r\n */\nexport const isDataStale = (hours = 3) => {\n  try {\n    const lastUpdated = getLastUpdated();\n    if (!lastUpdated) return true;\n    const now = new Date();\n    const diffMs = now - lastUpdated;\n    const diffHours = diffMs / (1000 * 60 * 60);\n    return diffHours > hours;\n  } catch (error) {\n    console.error('檢查數據是否過期失敗:', error);\n    return true; // 發生錯誤時默認需要更新\n  }\n};\n\n/**\r\n * 清除所有本地存儲的數據\r\n */\nexport const clearAllData = () => {\n  try {\n    Object.values(KEYS).forEach(key => localStorage.removeItem(key));\n    return true;\n  } catch (error) {\n    console.error('清除數據失敗:', error);\n    return false;\n  }\n};","map":{"version":3,"names":["KEYS","WEATHER","ROAD_ALERTS","NORTHERN_LIGHTS","LAST_UPDATED","saveWeatherData","data","localStorage","setItem","JSON","stringify","updateLastUpdated","error","console","saveRoadAlerts","alerts","saveNorthernLightsData","getWeatherData","getItem","parse","getRoadAlerts","getNorthernLightsData","Date","toISOString","getLastUpdated","timestamp","isDataStale","hours","lastUpdated","now","diffMs","diffHours","clearAllData","Object","values","forEach","key","removeItem"],"sources":["C:/Users/wesle/OneDrive - KU Leuven/Desktop/Iceland/my-iceland-trip-website/src/utils/offlineStorage.js"],"sourcesContent":["// src/utils/offlineStorage.js\r\n/**\r\n * 離線存儲工具，使用 localStorage 管理離線數據\r\n */\r\n\r\nconst KEYS = {\r\n  WEATHER: 'iceland_weather_data',\r\n  ROAD_ALERTS: 'iceland_road_alerts',\r\n  NORTHERN_LIGHTS: 'iceland_northern_lights',\r\n  LAST_UPDATED: 'iceland_data_last_updated'\r\n};\r\n\r\n/**\r\n * 保存天氣數據到本地存儲\r\n * @param {Object} data - 天氣數據\r\n * @returns {boolean} - 操作是否成功\r\n */\r\nexport const saveWeatherData = (data) => {\r\n  try {\r\n    localStorage.setItem(KEYS.WEATHER, JSON.stringify(data));\r\n    updateLastUpdated();\r\n    return true;\r\n  } catch (error) {\r\n    console.error('保存天氣數據失敗:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * 保存道路警報到本地存儲\r\n * @param {Array} alerts - 道路警報數據\r\n * @returns {boolean} - 操作是否成功\r\n */\r\nexport const saveRoadAlerts = (alerts) => {\r\n  try {\r\n    localStorage.setItem(KEYS.ROAD_ALERTS, JSON.stringify(alerts));\r\n    updateLastUpdated();\r\n    return true;\r\n  } catch (error) {\r\n    console.error('保存道路警報失敗:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * 保存北極光預報到本地存儲\r\n * @param {Object} data - 北極光預報數據\r\n * @returns {boolean} - 操作是否成功\r\n */\r\nexport const saveNorthernLightsData = (data) => {\r\n  try {\r\n    localStorage.setItem(KEYS.NORTHERN_LIGHTS, JSON.stringify(data));\r\n    updateLastUpdated();\r\n    return true;\r\n  } catch (error) {\r\n    console.error('保存北極光預報失敗:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * 獲取本地存儲的天氣數據\r\n * @returns {Object|null} - 天氣數據或 null\r\n */\r\nexport const getWeatherData = () => {\r\n  try {\r\n    const data = localStorage.getItem(KEYS.WEATHER);\r\n    return data ? JSON.parse(data) : null;\r\n  } catch (error) {\r\n    console.error('獲取天氣數據失敗:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n * 獲取本地存儲的道路警報\r\n * @returns {Array|null} - 道路警報數據或 null\r\n */\r\nexport const getRoadAlerts = () => {\r\n  try {\r\n    const data = localStorage.getItem(KEYS.ROAD_ALERTS);\r\n    return data ? JSON.parse(data) : null;\r\n  } catch (error) {\r\n    console.error('獲取道路警報失敗:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n * 獲取本地存儲的北極光預報\r\n * @returns {Object|null} - 北極光預報數據或 null\r\n */\r\nexport const getNorthernLightsData = () => {\r\n  try {\r\n    const data = localStorage.getItem(KEYS.NORTHERN_LIGHTS);\r\n    return data ? JSON.parse(data) : null;\r\n  } catch (error) {\r\n    console.error('獲取北極光預報失敗:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n * 更新數據最後更新時間\r\n */\r\nconst updateLastUpdated = () => {\r\n  try {\r\n    localStorage.setItem(KEYS.LAST_UPDATED, new Date().toISOString());\r\n  } catch (error) {\r\n    console.error('更新時間戳失敗:', error);\r\n  }\r\n};\r\n\r\n/**\r\n * 獲取數據最後更新時間\r\n * @returns {Date|null} - 最後更新時間或 null\r\n */\r\nexport const getLastUpdated = () => {\r\n  try {\r\n    const timestamp = localStorage.getItem(KEYS.LAST_UPDATED);\r\n    return timestamp ? new Date(timestamp) : null;\r\n  } catch (error) {\r\n    console.error('獲取時間戳失敗:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n * 檢查數據是否需要更新 (超過指定時間)\r\n * @param {number} hours - 數據有效時間（小時）\r\n * @returns {boolean} - 是否需要更新\r\n */\r\nexport const isDataStale = (hours = 3) => {\r\n  try {\r\n    const lastUpdated = getLastUpdated();\r\n    if (!lastUpdated) return true;\r\n    \r\n    const now = new Date();\r\n    const diffMs = now - lastUpdated;\r\n    const diffHours = diffMs / (1000 * 60 * 60);\r\n    \r\n    return diffHours > hours;\r\n  } catch (error) {\r\n    console.error('檢查數據是否過期失敗:', error);\r\n    return true; // 發生錯誤時默認需要更新\r\n  }\r\n};\r\n\r\n/**\r\n * 清除所有本地存儲的數據\r\n */\r\nexport const clearAllData = () => {\r\n  try {\r\n    Object.values(KEYS).forEach(key => localStorage.removeItem(key));\r\n    return true;\r\n  } catch (error) {\r\n    console.error('清除數據失敗:', error);\r\n    return false;\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}