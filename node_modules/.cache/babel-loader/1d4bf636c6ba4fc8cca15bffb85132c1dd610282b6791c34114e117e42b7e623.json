{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wesle\\\\OneDrive - KU Leuven\\\\Desktop\\\\Iceland\\\\my-iceland-trip-website\\\\src\\\\components\\\\iceland-trip\\\\weatherWidget.js\",\n  _s = $RefreshSig$();\n// src/components/iceland-trip/weatherWidget.js\nimport React, { useState, useEffect } from 'react';\nimport { CloudSnow, Wind, Droplets, Thermometer } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherWidget = ({\n  theme\n}) => {\n  _s();\n  const [weather, setWeather] = useState(null);\n  const [weatherForecast, setWeatherForecast] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // 獲取天氣數據\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      try {\n        setLoading(true);\n\n        // 雷克雅維克的天氣資料\n        // Vedur.is API - 我使用他們的觀測數據端點\n        // 注意：具體 URL 和參數可能需要根據實際 API 文檔調整\n        const apiKey = process.env.REACT_APP_VEDUR_API_KEY || '';\n        const stationId = '1'; // 雷克雅維克站 ID (根據實際情況調整)\n\n        // 當前天氣\n        const weatherResponse = await fetch(`https://api.vedur.is/weather/observations/is?stations=${stationId}&time=1h&anytime=0&lang=is${apiKey ? `&key=${apiKey}` : ''}`);\n        if (!weatherResponse.ok) {\n          throw new Error('無法獲取天氣數據');\n        }\n        const weatherData = await weatherResponse.json();\n\n        // 天氣預報\n        const forecastResponse = await fetch(`https://api.vedur.is/weather/forecasts/is?stations=${stationId}&lang=is${apiKey ? `&key=${apiKey}` : ''}`);\n        if (!forecastResponse.ok) {\n          throw new Error('無法獲取天氣預報數據');\n        }\n        const forecastData = await forecastResponse.json();\n\n        // 處理當前天氣數據\n        // 注意：這裡的數據結構需要根據實際 API 返回調整\n        if (weatherData && weatherData.results && weatherData.results.length > 0) {\n          const currentWeatherData = weatherData.results[0];\n          setWeather({\n            temperature: currentWeatherData.T || -2,\n            // 溫度，攝氏度\n            condition: getWeatherCondition(currentWeatherData),\n            // 天氣狀況描述函數\n            icon: getWeatherIcon(currentWeatherData),\n            // 天氣圖標函數\n            windSpeed: currentWeatherData.F || 25,\n            // 風速，km/h\n            humidity: currentWeatherData.RH || 80,\n            // 相對濕度，%\n            feelsLike: calculateFeelsLike(currentWeatherData.T, currentWeatherData.F, currentWeatherData.RH) || -8 // 體感溫度計算函數\n          });\n        } else {\n          // 使用默認值作為備用\n          setWeather({\n            temperature: -2,\n            condition: \"light snow\",\n            icon: \"13d\",\n            windSpeed: 25,\n            humidity: 80,\n            feelsLike: -8\n          });\n        }\n\n        // 處理天氣預報數據\n        // 注意：這裡的數據結構需要根據實際 API 返回調整\n        if (forecastData && forecastData.forecasts) {\n          const processedForecast = forecastData.forecasts.slice(0, 5) // 只取未來 5 天\n          .map((forecast, index) => ({\n            day: index === 0 ? \"今天\" : formatDay(forecast.ftime),\n            // 格式化日期函數\n            temp: forecast.T || (index === 0 ? -2 : -1 - index),\n            // 溫度，攝氏度\n            condition: getWeatherCondition(forecast) || \"partly cloudy\",\n            // 天氣狀況描述\n            icon: getWeatherIcon(forecast) || (index % 2 === 0 ? \"13d\" : \"04d\") // 天氣圖標\n          }));\n          setWeatherForecast(processedForecast);\n        } else {\n          // 使用默認值作為備用\n          setWeatherForecast([{\n            day: \"今天\",\n            temp: -2,\n            condition: \"light snow\",\n            icon: \"13d\"\n          }, {\n            day: \"明天\",\n            temp: -1,\n            condition: \"cloudy\",\n            icon: \"04d\"\n          }, {\n            day: \"週三\",\n            temp: -3,\n            condition: \"snow showers\",\n            icon: \"13d\"\n          }, {\n            day: \"週四\",\n            temp: -4,\n            condition: \"clear sky\",\n            icon: \"01d\"\n          }, {\n            day: \"週五\",\n            temp: -2,\n            condition: \"partly cloudy\",\n            icon: \"02d\"\n          }]);\n        }\n      } catch (err) {\n        console.error(\"獲取天氣數據時出錯:\", err);\n        setError(err.message);\n\n        // 使用默認值作為備用\n        setWeather({\n          temperature: -2,\n          condition: \"light snow\",\n          icon: \"13d\",\n          windSpeed: 25,\n          humidity: 80,\n          feelsLike: -8\n        });\n        setWeatherForecast([{\n          day: \"今天\",\n          temp: -2,\n          condition: \"light snow\",\n          icon: \"13d\"\n        }, {\n          day: \"明天\",\n          temp: -1,\n          condition: \"cloudy\",\n          icon: \"04d\"\n        }, {\n          day: \"週三\",\n          temp: -3,\n          condition: \"snow showers\",\n          icon: \"13d\"\n        }, {\n          day: \"週四\",\n          temp: -4,\n          condition: \"clear sky\",\n          icon: \"01d\"\n        }, {\n          day: \"週五\",\n          temp: -2,\n          condition: \"partly cloudy\",\n          icon: \"02d\"\n        }]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchWeatherData();\n\n    // 每 30 分鐘更新一次天氣數據\n    const intervalId = setInterval(fetchWeatherData, 30 * 60 * 1000);\n    return () => clearInterval(intervalId);\n  }, []);\n\n  // 格式化日期函數\n  const formatDay = dateStr => {\n    const days = [\"週日\", \"週一\", \"週二\", \"週三\", \"週四\", \"週五\", \"週六\"];\n    const date = new Date(dateStr);\n    return days[date.getDay()];\n  };\n\n  // 根據天氣數據獲取天氣狀況描述\n  const getWeatherCondition = weatherData => {\n    // 這個函數需要根據實際 API 返回的數據結構來實現\n    // 這裡只是示例\n    if (!weatherData) return \"unknown\";\n\n    // 如果 API 直接提供天氣描述\n    if (weatherData.W) return weatherData.W;\n\n    // 否則，根據其他參數推斷\n    if (weatherData.P && weatherData.P > 0) {\n      return weatherData.T < 0 ? \"snow\" : \"rain\";\n    }\n    if (weatherData.N && weatherData.N > 7) return \"cloudy\";\n    if (weatherData.N && weatherData.N > 3) return \"partly cloudy\";\n    return \"clear sky\";\n  };\n\n  // A function to get weather icon code\n  const getWeatherIcon = weatherData => {\n    // 這個函數需要根據實際 API 返回的數據結構來實現\n    // 這裡只是一個示例\n    if (!weatherData) return \"01d\"; // 默認晴天\n\n    const condition = getWeatherCondition(weatherData);\n    const isDay = true; // 這裡可以根據時間判斷是白天還是黑夜\n\n    // 簡單示例映射\n    const iconMap = {\n      \"clear sky\": isDay ? \"01d\" : \"01n\",\n      \"partly cloudy\": isDay ? \"02d\" : \"02n\",\n      \"cloudy\": isDay ? \"04d\" : \"04n\",\n      \"rain\": isDay ? \"10d\" : \"10n\",\n      \"snow\": isDay ? \"13d\" : \"13n\"\n    };\n    return iconMap[condition] || \"01d\";\n  };\n\n  // 計算體感溫度\n  const calculateFeelsLike = (temperature, windSpeed, humidity) => {\n    // 簡單的風寒計算公式，實際可能更複雜\n    if (!temperature || !windSpeed) return temperature;\n\n    // 風寒指數簡化計算\n    let feelsLike = 13.12 + 0.6215 * temperature - 11.37 * Math.pow(windSpeed, 0.16) + 0.3965 * temperature * Math.pow(windSpeed, 0.16);\n    return Math.round(feelsLike);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `mb-8 ${theme.cardBg} rounded-xl shadow-lg p-4 ${theme.cardBorder}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: `text-lg font-semibold mb-3 flex items-center gap-2`,\n      children: [/*#__PURE__*/_jsxDEV(CloudSnow, {\n        className: `h-5 w-5 ${theme.highlight}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u51B0\\u5CF6\\u5929\\u6C23\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), loading && !weather ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-pulse flex justify-center mb-2\",\n        children: /*#__PURE__*/_jsxDEV(CloudSnow, {\n          className: \"h-8 w-8 opacity-50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-sm\",\n        children: \"\\u8F09\\u5165\\u5929\\u6C23\\u8CC7\\u8A0A\\u4E2D...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-2 text-red-500\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-sm\",\n        children: [\"\\u7121\\u6CD5\\u7372\\u53D6\\u6700\\u65B0\\u5929\\u6C23\\u6578\\u64DA\\u3002\", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }, this) : weather ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-4xl font-bold\",\n          children: [weather.temperature, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm uppercase\",\n            children: weather.condition\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `flex items-center space-x-3 mt-2 ${theme.secondaryText} text-sm`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(Wind, {\n                className: \"h-4 w-4 mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [weather.windSpeed, \" km/h\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(Droplets, {\n                className: \"h-4 w-4 mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [weather.humidity, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(Thermometer, {\n                className: \"h-4 w-4 mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"\\u9AD4\\u611F \", weather.feelsLike, \"\\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-2 overflow-x-auto md:justify-end py-2\",\n        children: weatherForecast.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex flex-col items-center ${theme.darkMode ? 'bg-white bg-opacity-10' : 'bg-blue-50'} rounded-lg p-2 min-w-16`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs\",\n            children: day.day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm font-semibold\",\n            children: [day.temp, \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs truncate\",\n            children: day.condition\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-2\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-sm\",\n        children: \"\\u7121\\u6CD5\\u8F09\\u5165\\u5929\\u6C23\\u8CC7\\u8A0A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-xs text-right mt-2 opacity-70\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u8CC7\\u6599\\u4F86\\u6E90: Vedur.is \\u51B0\\u5CF6\\u6C23\\u8C61\\u5C40\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherWidget, \"CD7zYQTLMMtbDvjXT32sIrmNDrU=\");\n_c = WeatherWidget;\nexport default WeatherWidget;\nvar _c;\n$RefreshReg$(_c, \"WeatherWidget\");","map":{"version":3,"names":["React","useState","useEffect","CloudSnow","Wind","Droplets","Thermometer","jsxDEV","_jsxDEV","WeatherWidget","theme","_s","weather","setWeather","weatherForecast","setWeatherForecast","loading","setLoading","error","setError","fetchWeatherData","apiKey","process","env","REACT_APP_VEDUR_API_KEY","stationId","weatherResponse","fetch","ok","Error","weatherData","json","forecastResponse","forecastData","results","length","currentWeatherData","temperature","T","condition","getWeatherCondition","icon","getWeatherIcon","windSpeed","F","humidity","RH","feelsLike","calculateFeelsLike","forecasts","processedForecast","slice","map","forecast","index","day","formatDay","ftime","temp","err","console","message","intervalId","setInterval","clearInterval","dateStr","days","date","Date","getDay","W","P","N","isDay","iconMap","Math","pow","round","className","cardBg","cardBorder","children","highlight","fileName","_jsxFileName","lineNumber","columnNumber","secondaryText","darkMode","_c","$RefreshReg$"],"sources":["C:/Users/wesle/OneDrive - KU Leuven/Desktop/Iceland/my-iceland-trip-website/src/components/iceland-trip/weatherWidget.js"],"sourcesContent":["// src/components/iceland-trip/weatherWidget.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { CloudSnow, Wind, Droplets, Thermometer } from 'lucide-react';\r\n\r\nconst WeatherWidget = ({ theme }) => {\r\n  const [weather, setWeather] = useState(null);\r\n  const [weatherForecast, setWeatherForecast] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // 獲取天氣數據\r\n  useEffect(() => {\r\n    const fetchWeatherData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        \r\n        // 雷克雅維克的天氣資料\r\n        // Vedur.is API - 我使用他們的觀測數據端點\r\n        // 注意：具體 URL 和參數可能需要根據實際 API 文檔調整\r\n        const apiKey = process.env.REACT_APP_VEDUR_API_KEY || '';\r\n        const stationId = '1'; // 雷克雅維克站 ID (根據實際情況調整)\r\n        \r\n        // 當前天氣\r\n        const weatherResponse = await fetch(\r\n          `https://api.vedur.is/weather/observations/is?stations=${stationId}&time=1h&anytime=0&lang=is${apiKey ? `&key=${apiKey}` : ''}`\r\n        );\r\n        \r\n        if (!weatherResponse.ok) {\r\n          throw new Error('無法獲取天氣數據');\r\n        }\r\n        \r\n        const weatherData = await weatherResponse.json();\r\n        \r\n        // 天氣預報\r\n        const forecastResponse = await fetch(\r\n          `https://api.vedur.is/weather/forecasts/is?stations=${stationId}&lang=is${apiKey ? `&key=${apiKey}` : ''}`\r\n        );\r\n        \r\n        if (!forecastResponse.ok) {\r\n          throw new Error('無法獲取天氣預報數據');\r\n        }\r\n        \r\n        const forecastData = await forecastResponse.json();\r\n        \r\n        // 處理當前天氣數據\r\n        // 注意：這裡的數據結構需要根據實際 API 返回調整\r\n        if (weatherData && weatherData.results && weatherData.results.length > 0) {\r\n          const currentWeatherData = weatherData.results[0];\r\n          setWeather({\r\n            temperature: currentWeatherData.T || -2, // 溫度，攝氏度\r\n            condition: getWeatherCondition(currentWeatherData), // 天氣狀況描述函數\r\n            icon: getWeatherIcon(currentWeatherData), // 天氣圖標函數\r\n            windSpeed: currentWeatherData.F || 25, // 風速，km/h\r\n            humidity: currentWeatherData.RH || 80, // 相對濕度，%\r\n            feelsLike: calculateFeelsLike(currentWeatherData.T, currentWeatherData.F, currentWeatherData.RH) || -8 // 體感溫度計算函數\r\n          });\r\n        } else {\r\n          // 使用默認值作為備用\r\n          setWeather({\r\n            temperature: -2,\r\n            condition: \"light snow\",\r\n            icon: \"13d\",\r\n            windSpeed: 25,\r\n            humidity: 80,\r\n            feelsLike: -8,\r\n          });\r\n        }\r\n        \r\n        // 處理天氣預報數據\r\n        // 注意：這裡的數據結構需要根據實際 API 返回調整\r\n        if (forecastData && forecastData.forecasts) {\r\n          const processedForecast = forecastData.forecasts\r\n            .slice(0, 5) // 只取未來 5 天\r\n            .map((forecast, index) => ({\r\n              day: index === 0 ? \"今天\" : formatDay(forecast.ftime), // 格式化日期函數\r\n              temp: forecast.T || (index === 0 ? -2 : -1 - index), // 溫度，攝氏度\r\n              condition: getWeatherCondition(forecast) || \"partly cloudy\", // 天氣狀況描述\r\n              icon: getWeatherIcon(forecast) || (index % 2 === 0 ? \"13d\" : \"04d\") // 天氣圖標\r\n            }));\r\n          \r\n          setWeatherForecast(processedForecast);\r\n        } else {\r\n          // 使用默認值作為備用\r\n          setWeatherForecast([\r\n            { day: \"今天\", temp: -2, condition: \"light snow\", icon: \"13d\" },\r\n            { day: \"明天\", temp: -1, condition: \"cloudy\", icon: \"04d\" },\r\n            { day: \"週三\", temp: -3, condition: \"snow showers\", icon: \"13d\" },\r\n            { day: \"週四\", temp: -4, condition: \"clear sky\", icon: \"01d\" },\r\n            { day: \"週五\", temp: -2, condition: \"partly cloudy\", icon: \"02d\" }\r\n          ]);\r\n        }\r\n        \r\n      } catch (err) {\r\n        console.error(\"獲取天氣數據時出錯:\", err);\r\n        setError(err.message);\r\n        \r\n        // 使用默認值作為備用\r\n        setWeather({\r\n          temperature: -2,\r\n          condition: \"light snow\",\r\n          icon: \"13d\",\r\n          windSpeed: 25,\r\n          humidity: 80,\r\n          feelsLike: -8,\r\n        });\r\n        \r\n        setWeatherForecast([\r\n          { day: \"今天\", temp: -2, condition: \"light snow\", icon: \"13d\" },\r\n          { day: \"明天\", temp: -1, condition: \"cloudy\", icon: \"04d\" },\r\n          { day: \"週三\", temp: -3, condition: \"snow showers\", icon: \"13d\" },\r\n          { day: \"週四\", temp: -4, condition: \"clear sky\", icon: \"01d\" },\r\n          { day: \"週五\", temp: -2, condition: \"partly cloudy\", icon: \"02d\" }\r\n        ]);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchWeatherData();\r\n    \r\n    // 每 30 分鐘更新一次天氣數據\r\n    const intervalId = setInterval(fetchWeatherData, 30 * 60 * 1000);\r\n    \r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n  \r\n  // 格式化日期函數\r\n  const formatDay = (dateStr) => {\r\n    const days = [\"週日\", \"週一\", \"週二\", \"週三\", \"週四\", \"週五\", \"週六\"];\r\n    const date = new Date(dateStr);\r\n    return days[date.getDay()];\r\n  };\r\n  \r\n  // 根據天氣數據獲取天氣狀況描述\r\n  const getWeatherCondition = (weatherData) => {\r\n    // 這個函數需要根據實際 API 返回的數據結構來實現\r\n    // 這裡只是示例\r\n    if (!weatherData) return \"unknown\";\r\n    \r\n    // 如果 API 直接提供天氣描述\r\n    if (weatherData.W) return weatherData.W;\r\n    \r\n    // 否則，根據其他參數推斷\r\n    if (weatherData.P && weatherData.P > 0) {\r\n      return weatherData.T < 0 ? \"snow\" : \"rain\";\r\n    }\r\n    \r\n    if (weatherData.N && weatherData.N > 7) return \"cloudy\";\r\n    if (weatherData.N && weatherData.N > 3) return \"partly cloudy\";\r\n    return \"clear sky\";\r\n  };\r\n  \r\n  // A function to get weather icon code\r\n  const getWeatherIcon = (weatherData) => {\r\n    // 這個函數需要根據實際 API 返回的數據結構來實現\r\n    // 這裡只是一個示例\r\n    if (!weatherData) return \"01d\"; // 默認晴天\r\n    \r\n    const condition = getWeatherCondition(weatherData);\r\n    const isDay = true; // 這裡可以根據時間判斷是白天還是黑夜\r\n    \r\n    // 簡單示例映射\r\n    const iconMap = {\r\n      \"clear sky\": isDay ? \"01d\" : \"01n\",\r\n      \"partly cloudy\": isDay ? \"02d\" : \"02n\",\r\n      \"cloudy\": isDay ? \"04d\" : \"04n\",\r\n      \"rain\": isDay ? \"10d\" : \"10n\",\r\n      \"snow\": isDay ? \"13d\" : \"13n\",\r\n    };\r\n    \r\n    return iconMap[condition] || \"01d\";\r\n  };\r\n  \r\n  // 計算體感溫度\r\n  const calculateFeelsLike = (temperature, windSpeed, humidity) => {\r\n    // 簡單的風寒計算公式，實際可能更複雜\r\n    if (!temperature || !windSpeed) return temperature;\r\n    \r\n    // 風寒指數簡化計算\r\n    let feelsLike = 13.12 + 0.6215 * temperature - 11.37 * Math.pow(windSpeed, 0.16) + 0.3965 * temperature * Math.pow(windSpeed, 0.16);\r\n    \r\n    return Math.round(feelsLike);\r\n  };\r\n\r\n  return (\r\n    <div className={`mb-8 ${theme.cardBg} rounded-xl shadow-lg p-4 ${theme.cardBorder}`}>\r\n      <h2 className={`text-lg font-semibold mb-3 flex items-center gap-2`}>\r\n        <CloudSnow className={`h-5 w-5 ${theme.highlight}`} />\r\n        <span>冰島天氣</span>\r\n      </h2>\r\n      \r\n      {loading && !weather ? (\r\n        <div className=\"text-center py-6\">\r\n          <div className=\"animate-pulse flex justify-center mb-2\">\r\n            <CloudSnow className=\"h-8 w-8 opacity-50\" />\r\n          </div>\r\n          <span className=\"text-sm\">載入天氣資訊中...</span>\r\n        </div>\r\n      ) : error ? (\r\n        <div className=\"text-center py-2 text-red-500\">\r\n          <span className=\"text-sm\">無法獲取最新天氣數據。{error}</span>\r\n        </div>\r\n      ) : weather ? (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n          <div className=\"flex items-center space-x-4\">\r\n            <div className=\"text-4xl font-bold\">{weather.temperature}°C</div>\r\n            <div>\r\n              <div className=\"text-sm uppercase\">{weather.condition}</div>\r\n              <div className={`flex items-center space-x-3 mt-2 ${theme.secondaryText} text-sm`}>\r\n                <div className=\"flex items-center\">\r\n                  <Wind className=\"h-4 w-4 mr-1\" />\r\n                  <span>{weather.windSpeed} km/h</span>\r\n                </div>\r\n                <div className=\"flex items-center\">\r\n                  <Droplets className=\"h-4 w-4 mr-1\" />\r\n                  <span>{weather.humidity}%</span>\r\n                </div>\r\n                <div className=\"flex items-center\">\r\n                  <Thermometer className=\"h-4 w-4 mr-1\" />\r\n                  <span>體感 {weather.feelsLike}°C</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"flex space-x-2 overflow-x-auto md:justify-end py-2\">\r\n            {weatherForecast.map((day, index) => (\r\n              <div key={index} className={`flex flex-col items-center ${theme.darkMode ? 'bg-white bg-opacity-10' : 'bg-blue-50'} rounded-lg p-2 min-w-16`}>\r\n                <div className=\"text-xs\">{day.day}</div>\r\n                <div className=\"text-sm font-semibold\">{day.temp}°</div>\r\n                <div className=\"text-xs truncate\">{day.condition}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"text-center py-2\">\r\n          <span className=\"text-sm\">無法載入天氣資訊</span>\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"text-xs text-right mt-2 opacity-70\">\r\n        <span>資料來源: Vedur.is 冰島氣象局</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherWidget;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}