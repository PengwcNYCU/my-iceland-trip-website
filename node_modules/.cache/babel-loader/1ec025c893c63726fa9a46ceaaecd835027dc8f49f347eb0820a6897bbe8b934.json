{"ast":null,"code":"// src/utils/offlineStorage.js\n/**\r\n * 離線存儲工具，使用 localStorage 管理離線數據\r\n */const KEYS={WEATHER:'iceland_weather_data',ROAD_ALERTS:'iceland_road_alerts',NORTHERN_LIGHTS:'iceland_northern_lights',LAST_UPDATED:'iceland_data_last_updated'};/**\r\n * 保存天氣數據到本地存儲\r\n * @param {Object} data - 天氣數據\r\n * @returns {boolean} - 操作是否成功\r\n */export const saveWeatherData=data=>{try{localStorage.setItem(KEYS.WEATHER,JSON.stringify(data));updateLastUpdated();return true;}catch(error){console.error('保存天氣數據失敗:',error);return false;}};/**\r\n * 保存道路警報到本地存儲\r\n * @param {Array} alerts - 道路警報數據\r\n * @returns {boolean} - 操作是否成功\r\n */export const saveRoadAlerts=alerts=>{try{localStorage.setItem(KEYS.ROAD_ALERTS,JSON.stringify(alerts));updateLastUpdated();return true;}catch(error){console.error('保存道路警報失敗:',error);return false;}};/**\r\n * 保存北極光預報到本地存儲\r\n * @param {Object} data - 北極光預報數據\r\n * @returns {boolean} - 操作是否成功\r\n */export const saveNorthernLightsData=data=>{try{localStorage.setItem(KEYS.NORTHERN_LIGHTS,JSON.stringify(data));updateLastUpdated();return true;}catch(error){console.error('保存北極光預報失敗:',error);return false;}};/**\r\n * 獲取本地存儲的天氣數據\r\n * @returns {Object|null} - 天氣數據或 null\r\n */export const getWeatherData=()=>{try{const data=localStorage.getItem(KEYS.WEATHER);return data?JSON.parse(data):null;}catch(error){console.error('獲取天氣數據失敗:',error);return null;}};/**\r\n * 獲取本地存儲的道路警報\r\n * @returns {Array|null} - 道路警報數據或 null\r\n */export const getRoadAlerts=()=>{try{const data=localStorage.getItem(KEYS.ROAD_ALERTS);return data?JSON.parse(data):null;}catch(error){console.error('獲取道路警報失敗:',error);return null;}};/**\r\n * 獲取本地存儲的北極光預報\r\n * @returns {Object|null} - 北極光預報數據或 null\r\n */export const getNorthernLightsData=()=>{try{const data=localStorage.getItem(KEYS.NORTHERN_LIGHTS);return data?JSON.parse(data):null;}catch(error){console.error('獲取北極光預報失敗:',error);return null;}};/**\r\n * 更新數據最後更新時間\r\n */const updateLastUpdated=()=>{try{localStorage.setItem(KEYS.LAST_UPDATED,new Date().toISOString());}catch(error){console.error('更新時間戳失敗:',error);}};/**\r\n * 獲取數據最後更新時間\r\n * @returns {Date|null} - 最後更新時間或 null\r\n */export const getLastUpdated=()=>{try{const timestamp=localStorage.getItem(KEYS.LAST_UPDATED);return timestamp?new Date(timestamp):null;}catch(error){console.error('獲取時間戳失敗:',error);return null;}};/**\r\n * 檢查數據是否需要更新 (超過指定時間)\r\n * @param {number} hours - 數據有效時間（小時）\r\n * @returns {boolean} - 是否需要更新\r\n */export const isDataStale=function(){let hours=arguments.length>0&&arguments[0]!==undefined?arguments[0]:3;try{const lastUpdated=getLastUpdated();if(!lastUpdated)return true;const now=new Date();const diffMs=now-lastUpdated;const diffHours=diffMs/(1000*60*60);return diffHours>hours;}catch(error){console.error('檢查數據是否過期失敗:',error);return true;// 發生錯誤時默認需要更新\n}};/**\r\n * 清除所有本地存儲的數據\r\n */export const clearAllData=()=>{try{Object.values(KEYS).forEach(key=>localStorage.removeItem(key));return true;}catch(error){console.error('清除數據失敗:',error);return false;}};","map":{"version":3,"names":["KEYS","WEATHER","ROAD_ALERTS","NORTHERN_LIGHTS","LAST_UPDATED","saveWeatherData","data","localStorage","setItem","JSON","stringify","updateLastUpdated","error","console","saveRoadAlerts","alerts","saveNorthernLightsData","getWeatherData","getItem","parse","getRoadAlerts","getNorthernLightsData","Date","toISOString","getLastUpdated","timestamp","isDataStale","hours","arguments","length","undefined","lastUpdated","now","diffMs","diffHours","clearAllData","Object","values","forEach","key","removeItem"],"sources":["C:/Users/wesle/OneDrive - KU Leuven/Desktop/Iceland/my-iceland-trip-website/src/utils/offlineStorage.js"],"sourcesContent":["// src/utils/offlineStorage.js\r\n/**\r\n * 離線存儲工具，使用 localStorage 管理離線數據\r\n */\r\n\r\nconst KEYS = {\r\n  WEATHER: 'iceland_weather_data',\r\n  ROAD_ALERTS: 'iceland_road_alerts',\r\n  NORTHERN_LIGHTS: 'iceland_northern_lights',\r\n  LAST_UPDATED: 'iceland_data_last_updated'\r\n};\r\n\r\n/**\r\n * 保存天氣數據到本地存儲\r\n * @param {Object} data - 天氣數據\r\n * @returns {boolean} - 操作是否成功\r\n */\r\nexport const saveWeatherData = (data) => {\r\n  try {\r\n    localStorage.setItem(KEYS.WEATHER, JSON.stringify(data));\r\n    updateLastUpdated();\r\n    return true;\r\n  } catch (error) {\r\n    console.error('保存天氣數據失敗:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * 保存道路警報到本地存儲\r\n * @param {Array} alerts - 道路警報數據\r\n * @returns {boolean} - 操作是否成功\r\n */\r\nexport const saveRoadAlerts = (alerts) => {\r\n  try {\r\n    localStorage.setItem(KEYS.ROAD_ALERTS, JSON.stringify(alerts));\r\n    updateLastUpdated();\r\n    return true;\r\n  } catch (error) {\r\n    console.error('保存道路警報失敗:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * 保存北極光預報到本地存儲\r\n * @param {Object} data - 北極光預報數據\r\n * @returns {boolean} - 操作是否成功\r\n */\r\nexport const saveNorthernLightsData = (data) => {\r\n  try {\r\n    localStorage.setItem(KEYS.NORTHERN_LIGHTS, JSON.stringify(data));\r\n    updateLastUpdated();\r\n    return true;\r\n  } catch (error) {\r\n    console.error('保存北極光預報失敗:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * 獲取本地存儲的天氣數據\r\n * @returns {Object|null} - 天氣數據或 null\r\n */\r\nexport const getWeatherData = () => {\r\n  try {\r\n    const data = localStorage.getItem(KEYS.WEATHER);\r\n    return data ? JSON.parse(data) : null;\r\n  } catch (error) {\r\n    console.error('獲取天氣數據失敗:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n * 獲取本地存儲的道路警報\r\n * @returns {Array|null} - 道路警報數據或 null\r\n */\r\nexport const getRoadAlerts = () => {\r\n  try {\r\n    const data = localStorage.getItem(KEYS.ROAD_ALERTS);\r\n    return data ? JSON.parse(data) : null;\r\n  } catch (error) {\r\n    console.error('獲取道路警報失敗:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n * 獲取本地存儲的北極光預報\r\n * @returns {Object|null} - 北極光預報數據或 null\r\n */\r\nexport const getNorthernLightsData = () => {\r\n  try {\r\n    const data = localStorage.getItem(KEYS.NORTHERN_LIGHTS);\r\n    return data ? JSON.parse(data) : null;\r\n  } catch (error) {\r\n    console.error('獲取北極光預報失敗:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n * 更新數據最後更新時間\r\n */\r\nconst updateLastUpdated = () => {\r\n  try {\r\n    localStorage.setItem(KEYS.LAST_UPDATED, new Date().toISOString());\r\n  } catch (error) {\r\n    console.error('更新時間戳失敗:', error);\r\n  }\r\n};\r\n\r\n/**\r\n * 獲取數據最後更新時間\r\n * @returns {Date|null} - 最後更新時間或 null\r\n */\r\nexport const getLastUpdated = () => {\r\n  try {\r\n    const timestamp = localStorage.getItem(KEYS.LAST_UPDATED);\r\n    return timestamp ? new Date(timestamp) : null;\r\n  } catch (error) {\r\n    console.error('獲取時間戳失敗:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n * 檢查數據是否需要更新 (超過指定時間)\r\n * @param {number} hours - 數據有效時間（小時）\r\n * @returns {boolean} - 是否需要更新\r\n */\r\nexport const isDataStale = (hours = 3) => {\r\n  try {\r\n    const lastUpdated = getLastUpdated();\r\n    if (!lastUpdated) return true;\r\n    \r\n    const now = new Date();\r\n    const diffMs = now - lastUpdated;\r\n    const diffHours = diffMs / (1000 * 60 * 60);\r\n    \r\n    return diffHours > hours;\r\n  } catch (error) {\r\n    console.error('檢查數據是否過期失敗:', error);\r\n    return true; // 發生錯誤時默認需要更新\r\n  }\r\n};\r\n\r\n/**\r\n * 清除所有本地存儲的數據\r\n */\r\nexport const clearAllData = () => {\r\n  try {\r\n    Object.values(KEYS).forEach(key => localStorage.removeItem(key));\r\n    return true;\r\n  } catch (error) {\r\n    console.error('清除數據失敗:', error);\r\n    return false;\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}