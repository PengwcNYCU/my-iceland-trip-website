{"ast":null,"code":"import React,{createContext,useState,useContext,useEffect}from'react';import{daysData}from'./itineraryData';import{jsx as _jsx}from\"react/jsx-runtime\";const ThemeContext=/*#__PURE__*/createContext();export const ThemeProvider=_ref=>{let{children}=_ref;const[darkMode,setDarkMode]=useState(true);const[currentDay,setCurrentDay]=useState(1);const[isAutoThemeEnabled,setIsAutoThemeEnabled]=useState(true);// 將時間字串轉換為可比較的數值\nconst timeToMinutes=timeStr=>{if(!timeStr)return 0;const[hours,minutes]=timeStr.split(':').map(Number);return hours*60+minutes;};// 切換主題的方法\nconst toggleDarkMode=function(){let manual=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;if(manual){// 如果是手動切換，禁用自動主題\nsetIsAutoThemeEnabled(false);setDarkMode(prevMode=>!prevMode);}else{// 自動切換\nsetDarkMode(prevMode=>!prevMode);}};// 自動根據日出日落時間設定主題\nuseEffect(()=>{// 如果自動主題被禁用，不執行自動切換\nif(!isAutoThemeEnabled)return;const now=new Date();const hours=now.getHours();const minutes=now.getMinutes();const currentTime=hours*60+minutes;// 找到當前的行程日期（假設行程從第一天開始）\nconst day=daysData[currentDay-1];if(day){const sunrise=timeToMinutes(day.sunrise);const sunset=timeToMinutes(day.sunset);// 如果當前時間在日出到日落之間，設為亮色模式\nsetDarkMode(currentTime<sunrise||currentTime>sunset);}},[currentDay,isAutoThemeEnabled]);// 重新啟用自動主題\nconst enableAutoTheme=()=>{setIsAutoThemeEnabled(true);};// 根據暗/亮模式設定主題色\nconst theme={darkMode,bg:darkMode?'bg-gradient-to-b from-blue-900 via-blue-700 to-blue-900':'bg-gradient-to-b from-blue-50 via-white to-blue-50',text:darkMode?'text-white':'text-gray-800',headerBg:darkMode?'bg-blue-900 bg-opacity-90':'bg-white bg-opacity-90',cardBg:darkMode?'bg-white bg-opacity-10 backdrop-blur-md':'bg-white shadow-md',cardBorder:darkMode?'border border-blue-300 border-opacity-30':'border border-gray-200',highlight:darkMode?'text-blue-300':'text-blue-600',secondaryText:darkMode?'text-blue-100':'text-gray-600',button:darkMode?'bg-blue-600 hover:bg-blue-700':'bg-blue-500 hover:bg-blue-600',iconColor:darkMode?'text-blue-300':'text-blue-500'};return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:{darkMode,toggleDarkMode,theme,setCurrentDay,isAutoThemeEnabled,enableAutoTheme},children:children});};export const useTheme=()=>useContext(ThemeContext);","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","daysData","jsx","_jsx","ThemeContext","ThemeProvider","_ref","children","darkMode","setDarkMode","currentDay","setCurrentDay","isAutoThemeEnabled","setIsAutoThemeEnabled","timeToMinutes","timeStr","hours","minutes","split","map","Number","toggleDarkMode","manual","arguments","length","undefined","prevMode","now","Date","getHours","getMinutes","currentTime","day","sunrise","sunset","enableAutoTheme","theme","bg","text","headerBg","cardBg","cardBorder","highlight","secondaryText","button","iconColor","Provider","value","useTheme"],"sources":["C:/Users/wesle/OneDrive - KU Leuven/Desktop/Iceland/my-iceland-trip-website/src/components/iceland-trip/themeContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { daysData } from './itineraryData';\r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  const [darkMode, setDarkMode] = useState(true);\r\n  const [currentDay, setCurrentDay] = useState(1);\r\n  const [isAutoThemeEnabled, setIsAutoThemeEnabled] = useState(true);\r\n\r\n  // 將時間字串轉換為可比較的數值\r\n  const timeToMinutes = (timeStr) => {\r\n    if (!timeStr) return 0;\r\n    const [hours, minutes] = timeStr.split(':').map(Number);\r\n    return hours * 60 + minutes;\r\n  };\r\n\r\n  // 切換主題的方法\r\n  const toggleDarkMode = (manual = false) => {\r\n    if (manual) {\r\n      // 如果是手動切換，禁用自動主題\r\n      setIsAutoThemeEnabled(false);\r\n      setDarkMode(prevMode => !prevMode);\r\n    } else {\r\n      // 自動切換\r\n      setDarkMode(prevMode => !prevMode);\r\n    }\r\n  };\r\n\r\n  // 自動根據日出日落時間設定主題\r\n  useEffect(() => {\r\n    // 如果自動主題被禁用，不執行自動切換\r\n    if (!isAutoThemeEnabled) return;\r\n\r\n    const now = new Date();\r\n    const hours = now.getHours();\r\n    const minutes = now.getMinutes();\r\n    const currentTime = hours * 60 + minutes;\r\n\r\n    // 找到當前的行程日期（假設行程從第一天開始）\r\n    const day = daysData[currentDay - 1];\r\n    if (day) {\r\n      const sunrise = timeToMinutes(day.sunrise);\r\n      const sunset = timeToMinutes(day.sunset);\r\n\r\n      // 如果當前時間在日出到日落之間，設為亮色模式\r\n      setDarkMode(currentTime < sunrise || currentTime > sunset);\r\n    }\r\n  }, [currentDay, isAutoThemeEnabled]);\r\n\r\n  // 重新啟用自動主題\r\n  const enableAutoTheme = () => {\r\n    setIsAutoThemeEnabled(true);\r\n  };\r\n\r\n  // 根據暗/亮模式設定主題色\r\n  const theme = {\r\n    darkMode,\r\n    bg: darkMode ? 'bg-gradient-to-b from-blue-900 via-blue-700 to-blue-900' : 'bg-gradient-to-b from-blue-50 via-white to-blue-50',\r\n    text: darkMode ? 'text-white' : 'text-gray-800',\r\n    headerBg: darkMode ? 'bg-blue-900 bg-opacity-90' : 'bg-white bg-opacity-90',\r\n    cardBg: darkMode ? 'bg-white bg-opacity-10 backdrop-blur-md' : 'bg-white shadow-md',\r\n    cardBorder: darkMode ? 'border border-blue-300 border-opacity-30' : 'border border-gray-200',\r\n    highlight: darkMode ? 'text-blue-300' : 'text-blue-600',\r\n    secondaryText: darkMode ? 'text-blue-100' : 'text-gray-600',\r\n    button: darkMode ? 'bg-blue-600 hover:bg-blue-700' : 'bg-blue-500 hover:bg-blue-600',\r\n    iconColor: darkMode ? 'text-blue-300' : 'text-blue-500'\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ \r\n      darkMode, \r\n      toggleDarkMode, \r\n      theme, \r\n      setCurrentDay,\r\n      isAutoThemeEnabled,\r\n      enableAutoTheme\r\n    }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTheme = () => useContext(ThemeContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}